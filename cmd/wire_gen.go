// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/br4tech/go-with-gemini/internal/core/usecase"
	"github.com/br4tech/go-with-gemini/internal/handler"
	"github.com/br4tech/go-with-gemini/internal/repository"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitializeOpinionHandler(db *gorm.DB) *handler.OpinionHandler {
	iOpinionRepository := repository.NewOpinionRepository(db)
	iOpinionUseCase := usecase.NewOpinionUseCase(iOpinionRepository)
	opinionHandler := handler.NewOpinionHandler(iOpinionUseCase)
	return opinionHandler
}

func InitializeProductHandler(db *gorm.DB) *handler.ProductHandler {
	iProductRepository := repository.NewProductRepository(db)
	iProductUseCase := usecase.NewProductUseCase(iProductRepository)
	productHandler := handler.NewProductHandler(iProductUseCase)
	return productHandler
}

func InitializeSummaryHandler(db *gorm.DB) *handler.SummaryHandler {
	iSummaryRepository := repository.NewSummaryRepository(db)
	iSummaryUseCase := usecase.NewSummaryUseCase(iSummaryRepository)
	summaryHandler := handler.NewSummaryHandler(iSummaryUseCase)
	return summaryHandler
}
